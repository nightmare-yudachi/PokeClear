name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:  # 添加手动触发选项

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录，有助于某些Gradle任务

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'  # 启用Java依赖缓存

    - name: Validate Gradle Wrapper
      run: |
        # 检查gradlew是否存在并具有执行权限
        if [ ! -f "./gradlew" ]; then
          echo "::error::Gradle Wrapper (gradlew) not found!"
          exit 1
        fi
        chmod +x ./gradlew

    - name: Build with Gradle (with fallback)
      run: |
        # 尝试带缓存的构建，失败后尝试不带缓存
        ./gradlew build --no-daemon || \
        (echo "::warning::Build with cache failed, retrying without cache..." && \
         ./gradlew build --no-daemon --no-build-cache --rerun-tasks)
      timeout-minutes: 30  # 设置合理的超时时间
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

    - name: Upload Artifact
      if: success()  # 仅在构建成功时上传
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          build/libs/*.jar
          build/reports/**/*

  dependency-submission:
    needs: build  # 仅在构建成功后运行
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4
      with:
        # 显式声明使用最新稳定版
        gradle-version: 8.9
        # 可选参数，减少日志输出
        arguments: --quiet
